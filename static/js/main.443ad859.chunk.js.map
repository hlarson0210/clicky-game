{"version":3,"sources":["components/FriendCard/index.js","components/Wrapper/index.js","components/NavBar/index.js","components/Footer/index.js","App.js","index.js"],"names":["style","style2","FriendCard","props","className","onClick","shuffleArr","id","checkGuess","alt","name","src","image","key","Wrapper","children","Navbar","this","score","topScore","Component","Footer","App","state","friends","start","textClass","shuffle","guessed","Set","shuffleArray","arr","sort","Math","random","shuffleMeTimbers","setState","friendID","has","incorrect","add","correct","map","friend","onCorrect","onIncorrect","React","ReactDOM","render","document","getElementById"],"mappings":"2uEAGIA,G,MAAQ,CACV,OAAU,QACV,MAAS,UAGPC,EAAS,CACX,MAAS,QACT,OAAU,SAYGC,MARf,SAAoBC,GAClB,OACE,yBAAKH,MAAOC,EAAQG,UAAU,OAAOC,QAAS,kBAAMF,EAAMG,WAAWH,EAAMI,MACzE,yBAAKF,QAAS,kBAAMF,EAAMK,WAAWL,EAAMI,KAAKP,MAAOA,EAAOS,IAAKN,EAAMO,KAAMC,IAAKR,EAAMS,MAAOL,GAAIJ,EAAMI,GAAIM,IAAKV,EAAMU,IAAKT,UAAU,mC,MCVhIU,MAJf,SAAiBX,GACf,OAAO,yBAAKC,UAAU,WAAWD,EAAMY,W,OCmB1BC,G,uLAjBT,OACE,yBAAKZ,UAAU,qCACb,yBAAKA,UAAU,qBACb,wBAAIA,UAAU,iBACZ,wBAAIA,UAAU,6CACZ,0BAAMA,UAAU,uBAAuBa,KAAKd,MAAMY,WAEpD,wBAAIX,UAAU,6CACZ,0BAAMA,UAAU,uBAAhB,UAA8Ca,KAAKd,MAAMe,MAAzD,iBAA8ED,KAAKd,MAAMgB,SAAzF,a,GAVKC,cCUNC,G,uLARP,OACI,yBAAKjB,UAAU,iCACX,yBAAKA,UAAU,qB,GAJVgB,cC6FNE,G,iNAvFbC,MAAQ,CACNC,QAASA,EACTN,MAAO,EACPC,SAAU,EACVM,MAAO,2BACPC,UAAW,GACXC,QAAS,GACTC,QAAS,IAAIC,K,EAQfC,aAAe,SAAAC,GACb,OAAOA,EAAIC,MAAK,kBAAMC,KAAKC,SAAW,O,EAGxCC,iBAAmB,WACjB,EAAKC,SAAS,CAAET,QAAS,EAAKG,aAAa,EAAKP,MAAMC,Y,EAmBxDhB,WAAa,SAAC6B,GACZ,EAAKF,mBACD,EAAKZ,MAAMK,QAAQU,IAAID,GACzB,EAAKD,SAAS,CAAER,QAAS,IAAIC,MAAS,WACpC,EAAKU,gBAKT,EAAKhB,MAAMK,QAAQY,IAAIH,GAEvB,EAAKI,Y,mFAvCLxB,KAAKkB,mBACLlB,KAAKmB,SAAS,CAAEX,MAAO,+B,kCAcvBR,KAAKmB,SAAS,CAAElB,MAAO,EAAGO,MAAO,8B,gCAIjC,IAAIP,EAAQD,KAAKM,MAAML,MAAQ,EAE3BA,EAAQD,KAAKM,MAAMJ,SACrBF,KAAKmB,SAAS,CAAElB,MAAOA,EAAOC,SAAUD,EAAOO,MAAO,0BAEtDR,KAAKmB,SAAS,CAAElB,MAAOA,EAAOO,MAAO,4B,+BAkB/B,IAAD,OACP,OACE,kBAAC,EAAD,KACE,kBAAC,EAAD,CACEP,MAAOD,KAAKM,MAAML,MAClBC,SAAUF,KAAKM,MAAMJ,SACrBO,UAAWT,KAAKM,MAAMG,WAAYT,KAAKM,MAAME,OAC/C,yBAAKrB,UAAU,aACb,yBAAKA,UAAU,6BACb,wBAAIA,UAAU,SAAd,eACA,wBAAIA,UAAU,SAAd,8EAGJ,yBAAKA,UAAU,aACb,yBAAKA,UAAU,OACZa,KAAKM,MAAMC,QAAQkB,KAAI,SAAAC,GAAM,OAC5B,kBAAC,EAAD,CACErC,WAAY,EAAK6B,iBACjBS,UAAW,WAAQ,EAAKH,WACxBI,YAAa,WAAQ,EAAKN,aAC1B/B,WAAY,EAAKA,WACjBD,GAAIoC,EAAOpC,GACXM,IAAK8B,EAAOpC,GACZG,KAAMiC,EAAOjC,KACbE,MAAO+B,EAAO/B,aAItB,kBAAC,EAAD,W,GAlFUkC,IAAM1B,Y,MCJxB2B,IAASC,OAAO,kBAAC,EAAD,MAAUC,SAASC,eAAe,W","file":"static/js/main.443ad859.chunk.js","sourcesContent":["import React from \"react\";\nimport \"./style.css\";\n\nlet style = {\n  \"height\": \"160px\",\n  \"width\": \"160px\"\n}\n\nlet style2 = {\n  \"width\": \"12rem\",\n  \"height\": \"12rem\"\n}\n\n\nfunction FriendCard(props) {\n  return (\n    <div style={style2} className=\"card\" onClick={() => props.shuffleArr(props.id)}>\n      <img onClick={() => props.checkGuess(props.id)} style={style} alt={props.name} src={props.image} id={props.id} key={props.key} className=\"card-img-top mx-auto my-auto\" />\n    </div>\n  );\n}\n\nexport default FriendCard;\n","import React from \"react\";\nimport \"./style.css\";\n\nfunction Wrapper(props) {\n  return <div className=\"wrapper\">{props.children}</div>;\n}\n\nexport default Wrapper;\n","import React, { Component } from \"react\";\nimport \"./style.css\";\n\n\nclass Navbar extends Component {\n    render() {\n      return (\n        <div className=\"container-fluid fixed-top p-0 m-0\">\n          <div className=\"row m-0 p-0 motto\">\n            <ul className=\"nav col-sm-12\">\n              <li className=\"nav-item col col-sm-6 mx-auto text-center\">\n                <span className=\"nav-link text-white\">{this.props.children}</span>\n              </li>\n              <li className=\"nav-item col col-sm-6 mx-auto text-center\">\n                <span className=\"nav-link text-white\">score: {this.props.score} | top score: {this.props.topScore} </span>\n              </li>\n            </ul>\n          </div>\n        </div>\n      );\n    }\n}\n\nexport default Navbar;\n","import React, { Component } from \"react\";\nimport \"./style.css\";\n\n\nclass Footer extends Component {\n    render() {\n        return (\n            <div className=\"container-fluid m-0 p-0 botom\">\n                <div className=\"row m-0 p-0\"></div>\n            </div>\n        );\n    }\n}\n\nexport default Footer;","import React from \"react\";\nimport FriendCard from \"./components/FriendCard\";\nimport Wrapper from \"./components/Wrapper\";\nimport friends from \"./friends.json\";\nimport Navbar from \"./components/NavBar\";\nimport Footer from \"./components/Footer\";\n\nimport \"./App.css\";\n\nclass App extends React.Component {\n  state = {\n    friends: friends,\n    score: 0,\n    topScore: 0,\n    start: \"click any image to start\",\n    textClass: \"\",\n    shuffle: [],\n    guessed: new Set(),\n  }\n\n  componentDidMount() {\n    this.shuffleMeTimbers();\n    this.setState({ start: \"click any image to start\" })\n  }\n\n  shuffleArray = arr => {\n    return arr.sort(() => Math.random() - 0.5);\n  }\n\n  shuffleMeTimbers = () => {\n    this.setState({ shuffle: this.shuffleArray(this.state.friends) });\n  }\n\n\n\n  incorrect() {\n    this.setState({ score: 0, start: \"you guessed incorrectly\" });\n  }\n\n  correct() {\n    let score = this.state.score + 1;\n\n    if (score > this.state.topScore) {\n      this.setState({ score: score, topScore: score, start: \"you guessed correctly\" });\n    } else {\n      this.setState({ score: score, start: \"you guessed correctly\" });\n    }\n  }\n\n  checkGuess = (friendID) => {\n    this.shuffleMeTimbers();\n    if (this.state.guessed.has(friendID)) {\n      this.setState({ guessed: new Set() }, () => {\n        this.incorrect();\n      });\n\n      return\n    }\n    this.state.guessed.add(friendID);\n\n    this.correct();\n  }\n\n  render() {\n    return (\n      <Wrapper>\n        <Navbar\n          score={this.state.score}\n          topScore={this.state.topScore}\n          textClass={this.state.textClass}>{this.state.start}</Navbar>\n        <div className=\"container\">\n          <div className=\"jumbotron-fluid pt-5 mt-5\">\n            <h1 className=\"title\">clicky game</h1>\n            <h5 className=\"title\">click on an image to earn points...but don't click on the same one twice</h5>\n          </div>\n        </div>\n        <div className=\"container\">\n          <div className=\"row\">\n            {this.state.friends.map(friend =>\n              <FriendCard\n                shuffleArr={this.shuffleMeTimbers}\n                onCorrect={() => { this.correct() }}\n                onIncorrect={() => { this.incorrect() }}\n                checkGuess={this.checkGuess}\n                id={friend.id}\n                key={friend.id}\n                name={friend.name}\n                image={friend.image}\n              />)}\n          </div>\n        </div>\n        <Footer></Footer>\n      </Wrapper>\n    );\n  }\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App2 from \"./App\";\nimport \"./index.css\";\n\nReactDOM.render(<App2 />, document.getElementById(\"root\"));\n"],"sourceRoot":""}